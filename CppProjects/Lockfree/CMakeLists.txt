project( LockfreeTest )
cmake_minimum_required(VERSION 2.8)

set( ADDITIONAL_FLAGS "-DBUILD_OUTPUT_BIN=./Bin/${BuildType}")
set( ADDITIONAL_FLAGS_DEBUG "-D_DEBUG")
set( ADDITIONAL_FLAGS_RELEASE )

if( UNIX )
        set( ADDITIONAL_FLAGS "${ADDITIONAL_FLAGS} -std=c++11 -pthread -D_GLIBCXX_USE_NANOSLEEP -D_GLIBCXX_USE_SCHED_YIELD" )
	set( ADDITIONAL_FLAGS_DEBUG "${ADDITIONAL_FLAGS_DEBUG} -g3 -Wall -W -D_DEBUG " )
elseif( MSVC )
	set( ADDITIONAL_FLAGS "${ADDITIONAL_FLAGS} -DMSVC -DWIN32 -D_WINDOWS -D_WIN32 -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_WARNINGS -DNOMINMAX -EHsc -W3 -MP" )
	set( ADDITIONAL_FLAGS_DEBUG "${ADDITIONAL_FLAGS_DEBUG} -Od -MTd -ZI" )
	set( ADDITIONAL_FLAGS_RELEASE "${ADDITIONAL_FLAGS_RELEASE} -O2 -MT" )
else()
	#message( FATAL_ERROR "# Unsupported OS !" )
endif()

set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ADDITIONAL_FLAGS}" )
set( CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} ${ADDITIONAL_FLAGS_DEBUG}" )
set( CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ${ADDITIONAL_FLAGS_RELEASE}" )
set( SRC_LIST ${SRC_LIST} LockFree.h test.cpp )
add_executable( ${PROJECT_NAME} ${SRC_LIST} )

